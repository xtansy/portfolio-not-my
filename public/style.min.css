a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}html{height:100%}body{line-height:1;background:#1f1f1f;font-family:"Montserrat";color:#fff}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}a{color:inherit;text-decoration:inherit}input{outline:0;text-decoration:none;border:0}._container{width:100%;max-width:1300px;margin:0 auto}.name{font-weight:400;font-size:20px;line-height:170%}.title{margin-top:15px;font-weight:700;font-size:46px;line-height:55px}.overlay{margin:0 auto;border-left:1px solid #383838;border-right:1px solid #383838;position:relative}.overlay::after,.overlay::before{position:absolute;content:"";height:100%;top:0;z-index:-1;width:1px;background:#383838}.overlay::after{left:33.3333333333%}.overlay::before{right:33.3333333333%}.accordeon{width:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.accordeon__item{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.accordeon__item,.accordeon__item_active{display:-webkit-box;display:-ms-flexbox;display:flex}.accordeon__item_active .accordeon__item-content__title{color:#1378ef}.accordeon__item_active .accordeon__item-content__descr{display:block}.accordeon__item_active .accordeon__item-arrow img{-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg)}.accordeon__item-content__title{font-weight:700;font-size:28px;line-height:55px}.accordeon__item-content__descr{display:none;font-weight:400;font-size:16px;line-height:170%}.accordeon__item-arrow{cursor:pointer}.accordeon__item:not(:first-child){margin-top:19px}.slider{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.slider__window{overflow:hidden}.slider__window-container{max-width:860px;width:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-transition:all .7s ease-in-out;-o-transition:all .7s ease-in-out;transition:all .7s ease-in-out}.slider__window-container>:not(:last-child){margin-right:23px}.slider__item,.slider__item-content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.slider__item{-ms-flex-negative:0;flex-shrink:0;max-width:420px;max-height:341px;background:rgba(24,24,24,.59);padding:35px 25px}.slider__item-content{max-width:370px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;margin-top:10px}.slider__item-content h3{font-weight:700;font-size:20px;line-height:170%}.slider__item-content p{margin-top:10px;font-weight:400;font-size:16px;line-height:170%}.slider__arrows,.slider__arrows-left{-ms-flex-item-align:end;align-self:flex-end}.slider__arrows{position:relative;margin-left:100px;width:80px;height:150px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.slider__arrows-left{cursor:pointer;margin-top:24px;margin-bottom:44px}.slider__arrows-right{cursor:pointer;-ms-flex-item-align:start;align-self:flex-start}.slider__arrows-round{background:#1378ef;position:absolute;width:70px;height:70px;border-radius:100%;z-index:-1}.slider__arrows-round_left{left:0;top:0}.slider__arrows-round_right{bottom:0;right:0}.form{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;width:100%}.form__input{color:#fff;min-height:38px;background:0 0;font-weight:400;font-size:16px;line-height:170%;border-bottom:1px solid #fff;padding-bottom:5px;margin-bottom:20px}.form__input_message{padding-bottom:64px}.form__input_error{border-bottom:1px solid red}.form__input::-webkit-input-placeholder{color:#fff}.form__input::-moz-placeholder{color:#fff}.form__input:-ms-input-placeholder{color:#fff}.form__input::-ms-input-placeholder{color:#fff}.form__input::placeholder{color:#fff}.form__label{margin-top:50px;margin-right:83px;-ms-flex-item-align:end;align-self:flex-end;position:relative}.cursor{width:10px;height:10px;background:#1378ef;border-radius:100%;position:fixed;z-index:100;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.cursor_active{-webkit-transform:scale(0);-ms-transform:scale(0);transform:scale(0)}.follower{width:50px;height:50px;border-radius:100%;position:fixed;border:1px solid #1378ef;z-index:100;-webkit-transition:-webkit-transform .5s ease;-o-transition:transform .5s ease;transition:transform .5s ease;transition:transform .5s ease,-webkit-transform .5s ease;pointer-events:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.follower_active{-webkit-transform:scale(2);-ms-transform:scale(2);transform:scale(2);background:#1378ef;z-index:0}.link{cursor:none!important}.modal-wrapper{background:rgba(0,0,0,.5);display:none;position:fixed;z-index:1;top:0;left:0;width:100%;height:100%}.modal-wrapper_active{display:block}.modal{display:none;padding:25px 0;max-width:350px;width:100%;background:#1f1f1f;z-index:2;position:fixed;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);-ms-transform:translate(-50%,-50%);transform:translate(-50%,-50%);text-align:center}.modal_active{display:block}.modal__form-wrapper{display:block;margin:36px auto 0;max-width:300px}.modal__form-input_name{margin-bottom:29px}.modal__form-input_message{margin-bottom:0;padding-bottom:50px}.modal__form-label{margin-top:31px}.krest{width:20px;height:20px;position:absolute;top:10px;right:10px;-webkit-transform:rotate(225deg);-ms-transform:rotate(225deg);transform:rotate(225deg)}.krest__item{background:#fff;height:2px;width:20px}.krest__item_one{-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.krest__item_two{-webkit-transform:translate(0,-50%);-ms-transform:translate(0,-50%);transform:translate(0,-50%)}.burger{display:none}.burger__line{background:#fff;height:5px;width:35px;border-radius:20px}.burger>:not(:last-child){margin-bottom:6px}.burger_active{position:fixed;z-index:2;right:5%;-webkit-transform:rotate(225deg);-ms-transform:rotate(225deg);transform:rotate(225deg)}.burger_active .burger__line{margin-bottom:0}.burger_active .burger__line:nth-child(3){display:none}.burger_active .burger__line:nth-child(1){-webkit-transform:rotate(90deg);-ms-transform:rotate(90deg);transform:rotate(90deg)}.burger_active .burger__line:nth-child(2){-webkit-transform:translate(0,-50%);-ms-transform:translate(0,-50%);transform:translate(0,-50%)}.menu{background:rgba(0,0,0,.7);display:none;padding:50px 0;position:fixed;z-index:1;top:0;right:0;width:50%;height:100%}.menu_active{display:block}.menu__ul{height:100%;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-ms-flex-pack:distribute;justify-content:space-around;-webkit-box-align:center;-ms-flex-align:center;align-items:center}@font-face{font-family:"Montserrat";src:local("Montserrat-Regular"),url(./fonts/Montserrat-Regular.woff2) format("woff2"),url(./fonts/Montserrat-Regular.woff) format("woff");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:"Montserrat";src:local("Montserrat-Bold"),url(./fonts/Montserrat-Bold.woff2) format("woff2"),url(./fonts/Montserrat-Bold.woff) format("woff");font-weight:700;font-style:normal;font-display:swap}.footer{background:url(./img/footer.svg) no-repeat left #121212;padding-top:70px;padding-bottom:47px}.footer__content{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-align:end;-ms-flex-align:end;align-items:flex-end;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.footer__content-wrapper{width:100%;max-width:646.65px}.footer__content-text{max-width:551px}.footer__content-text__title{font-weight:700;font-size:32px;line-height:55px}.footer__content-text__descr{margin-top:35px;font-weight:400;font-size:16px;line-height:170%}.footer__content-form{margin-top:44px}.header{padding-top:30px}.header__nav,.header__ul{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__ul-item{cursor:pointer;font-weight:400;font-size:16px;line-height:150%;-webkit-transition:all 1s ease-in-out;-o-transition:all 1s ease-in-out;transition:all 1s ease-in-out;position:relative}.header__ul-item:hover::after{width:100%;-webkit-transition:all .3s ease-in-out;-o-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.header__ul-item::after{content:"";bottom:0;left:0;position:absolute;width:0;height:1px;background:#fff}.header__ul>:not(:last-child){margin-right:50px}.about{margin-top:230px}.about__titke{margin-top:15px}.about__history,.about__history-item{display:-webkit-box;display:-ms-flexbox;display:flex}.about__history{margin-top:44px;-ms-flex-wrap:wrap;flex-wrap:wrap}.about__history-item{-ms-flex-preferred-size:33.3333%;flex-basis:33.3333%;margin-bottom:98px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.about__history-item h2{font-weight:700;font-size:32px;line-height:170%;border-bottom:1px solid #fff;max-width:72px}.about__history-item p{margin-top:21px;font-weight:400;font-size:16px;line-height:170%}.discuss{position:relative;display:block;margin:150px auto;max-width:668px;height:316px}.discuss__content{text-align:center}.discuss__content-subtitle{cursor:pointer;margin-top:9px;display:block;font-weight:400;font-size:16px;line-height:150%}.discuss__round,.projects__tabs-item_active::after{background:#1378ef;z-index:-1;position:absolute;border-radius:100%}.discuss__round{left:50%;-webkit-transform:translate(-50%);-ms-transform:translate(-50%);transform:translate(-50%);width:260px;height:260px;bottom:0}.michael{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-top:154px}.michael__info{max-width:416px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.michael__info-text h1{font-weight:700;font-size:78px;line-height:116%}.michael__info-text p{margin-top:24px;font-weight:400;font-size:30px;line-height:137%}.michael__info,.michael__info-skills,.michael__info-skills__item{display:-webkit-box;display:-ms-flexbox;display:flex}.michael__info-skills{-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:50px;font-weight:400;font-size:21px;line-height:150%;gap:20px}.michael__info-skills__item{background:#1378ef;padding:0 16px;min-height:32px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;border-radius:64px}.michael__info-skills__item:hover{background:rgba(9,97,197,.5411764706);-webkit-transition:all .3s ease-in-out;-o-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.michael__canvas{margin-left:321px;width:450px;height:450px}.projects{margin-top:51px}.projects__title{margin-top:20px}.projects__tabs{margin-top:72px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.projects__tabs-item{cursor:pointer;margin-right:50px;margin-bottom:30px;font-weight:400;font-size:22px;line-height:150%;color:rgba(255,255,255,.59)}.projects__tabs-item_active{color:#fff;position:relative}.projects__tabs-item_active::after{content:"";left:0;top:-50%;width:67px;height:67px}.projects__content{margin-top:7px;display:none;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.projects__content_active{display:-webkit-box;display:-ms-flexbox;display:flex}.projects__content-title{-ms-flex-preferred-size:50.333%;flex-basis:50.333%;font-weight:700;font-size:28px;line-height:55px}.reviews{padding-bottom:254px}.reviews__text-title{margin-top:20px}.reviews__slider{margin-top:90px;max-width:1043px}*{cursor:none;-webkit-box-sizing:border-box;box-sizing:border-box}@supports (-webkit-appearance:none){.footer{background-image:url(./img/footer.svg)}}@media screen and (max-width:1350px){._container{padding-right:20px;padding-left:20px}.michael{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.michael__canvas{margin-left:0}.michael__info-text h1{font-size:70px}.michael__info-text p{font-size:22px}.michael__info-skills{font-size:14px;gap:15px;margin-top:30px}.michael__info-skills__item{padding:0 9px}}@media screen and (max-width:1324px){.footer{position:relative;z-index:-1}.footer::before{content:"";position:absolute;top:0;left:0;right:0;bottom:0;background-color:rgba(0,0,0,.5);z-index:-1;opacity:.8}}@media screen and (max-width:1000px){.slider{-webkit-box-orient:vertical;-webkit-box-direction:reverse;-ms-flex-direction:column-reverse;flex-direction:column-reverse}.slider__arrows{margin:0 0 20px;-ms-flex-item-align:auto;align-self:auto}.slider__window{max-width:820px}}@media screen and (max-width:998px){.footer__content{-webkit-box-align:center;-ms-flex-align:center;align-items:center}.form__label{-ms-flex-item-align:center;align-self:center;margin-right:0}.footer__content-text__title{font-size:28px}}@media screen and (max-width:878px){.slider__window,.slider__window-container{max-width:420px}.slider__item{margin:0}}@media screen and (max-width:830px){.projects__tabs{-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;gap:20px}.projects__tabs-item{font-size:18px;margin:0}.projects__content-title{font-size:22px}.accordeon__item-content__title{font-size:20px}.accordeon__item-content__descr{font-size:14px}}@media screen and (max-width:768px){.name{font-size:17px}.title{font-size:30px}.header__nav-logo{width:150px}.header__ul{display:none}.burger{display:block}.about__history{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.about__history-item{-ms-flex-preferred-size:34%;flex-basis:34%}.about__history-item h2{font-size:21px}.about__history-item p{font-size:14px}.michael{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.michael__info{max-width:none}}@media screen and (max-width:482px){.about__history{-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center}.about__history-item{margin-bottom:60px}}@media screen and (max-width:460px){.slider__item,.slider__window{max-width:300px}}@media screen and (max-width:450px){.michael__canvas{width:320px;height:320px}}@media screen and (max-width:430px){.accordeon__item-content__descr{max-width:100px}}@media screen and (max-width:420px){.footer__content-text__title{font-size:23px}.footer__content-text__descr{font-size:14px}}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */