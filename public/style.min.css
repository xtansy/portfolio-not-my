a,abbr,acronym,address,applet,article,aside,audio,b,big,blockquote,body,canvas,caption,center,cite,code,dd,del,details,dfn,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,header,hgroup,html,i,iframe,img,ins,kbd,label,legend,li,mark,menu,nav,object,ol,output,p,pre,q,ruby,s,samp,section,small,span,strike,strong,sub,summary,sup,table,tbody,td,tfoot,th,thead,time,tr,tt,u,ul,var,video{margin:0;padding:0;border:0;font:inherit;vertical-align:baseline}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section{display:block}html{height:100%}body{line-height:1;background:#1f1f1f;font-family:"Montserrat";color:#fff}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}table{border-collapse:collapse;border-spacing:0}a{color:inherit;text-decoration:inherit}._container{width:1300px;max-width:1300px;margin:0 auto}.name{font-weight:400;font-size:20px;line-height:170%}.title{margin-top:15px;font-weight:700;font-size:46px;line-height:55px}.overlay{width:1300px;margin:0 auto;border-left:1px solid #383838;border-right:1px solid #383838;position:relative}.overlay::after,.overlay::before{position:absolute;content:"";height:100%;top:0;z-index:-1;width:1px;background:#383838}.overlay::after{left:33.3333333333%}.overlay::before{right:33.3333333333%}.accordeon{width:100%;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.accordeon__item{-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.accordeon__item,.accordeon__item_active{display:-webkit-box;display:-ms-flexbox;display:flex}.accordeon__item_active .accordeon__item-content__title{color:#1378ef}.accordeon__item_active .accordeon__item-content__descr{display:block}.accordeon__item_active .accordeon__item-arrow img{-webkit-transform:rotate(-90deg);-ms-transform:rotate(-90deg);transform:rotate(-90deg)}.accordeon__item-content__title{font-weight:700;font-size:28px;line-height:55px}.accordeon__item-content__descr{display:none;font-weight:400;font-size:16px;line-height:170%}.accordeon__item-arrow{cursor:pointer}.accordeon__item:not(:first-child){margin-top:19px}@font-face{font-family:"Montserrat";src:local("Montserrat-Regular"),url(./fonts/Montserrat-Regular.woff2) format("woff2"),url(./fonts/Montserrat-Regular.woff) format("woff");font-weight:400;font-style:normal;font-display:swap}@font-face{font-family:"Montserrat";src:local("Montserrat-Bold"),url(./fonts/Montserrat-Bold.woff2) format("woff2"),url(./fonts/Montserrat-Bold.woff) format("woff");font-weight:700;font-style:normal;font-display:swap}.header{padding-top:30px}.header__ul{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center}.header__ul-item{cursor:pointer;font-weight:400;font-size:16px;line-height:150%;-webkit-transition:all 1s ease-in-out;-o-transition:all 1s ease-in-out;transition:all 1s ease-in-out;position:relative}.header__ul-item:hover::after,.michael__info-skills__item:hover{-webkit-transition:all .3s ease-in-out;-o-transition:all .3s ease-in-out;transition:all .3s ease-in-out}.header__ul-item:hover::after{width:100%}.header__ul-item::after{content:"";bottom:0;left:0;position:absolute;width:0;height:1px;background:#fff}.header__ul-logo{margin-right:647px}.about{margin-top:214px}.about__titke{margin-top:15px}.about__history{margin-top:44px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-ms-flex-wrap:wrap;flex-wrap:wrap}.about__history,.about__history-item,.michael{display:-webkit-box;display:-ms-flexbox;display:flex}.about__history-item{-ms-flex-preferred-size:33.3333%;flex-basis:33.3333%;margin-bottom:98px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.about__history-item h2{font-weight:700;font-size:32px;line-height:170%;border-bottom:1px solid #fff;max-width:72px}.about__history-item p{margin-top:21px;font-weight:400;font-size:16px;line-height:170%}.michael{-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-top:143px}.michael__info{max-width:416px;-webkit-box-orient:vertical;-webkit-box-direction:normal;-ms-flex-direction:column;flex-direction:column}.michael__info-text h1{font-weight:700;font-size:78px;line-height:116%}.michael__info-text p{margin-top:24px;font-weight:400;font-size:30px;line-height:137%}.michael__info,.michael__info-skills,.michael__info-skills__item{display:-webkit-box;display:-ms-flexbox;display:flex}.michael__info-skills{-ms-flex-wrap:wrap;flex-wrap:wrap;margin-top:50px;font-weight:400;font-size:21px;line-height:150%;gap:20px}.michael__info-skills__item{background:#1378ef;padding:0 16px;min-height:32px;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;-webkit-box-align:center;-ms-flex-align:center;align-items:center;text-align:center;border-radius:64px}.michael__info-skills__item:hover{background:rgba(9,97,197,.5411764706)}.michael__image{margin-left:321px}.projects{margin-top:51px;padding-bottom:550px}.projects__title{margin-top:20px}.projects__tabs{margin-top:72px;display:-webkit-box;display:-ms-flexbox;display:flex;-ms-flex-wrap:wrap;flex-wrap:wrap}.projects__tabs-item{cursor:pointer;margin-right:50px;margin-bottom:30px;font-weight:400;font-size:22px;line-height:150%;color:rgba(255,255,255,.59)}.projects__tabs-item_active{color:#fff;position:relative}.projects__tabs-item_active::after{background:#1378ef;z-index:-1;position:absolute;content:"";left:0;top:-50%;width:67px;height:67px;border-radius:100%}.projects__content{margin-top:7px;display:none;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start}.projects__content_active{display:-webkit-box;display:-ms-flexbox;display:flex}.projects__content-title{-ms-flex-preferred-size:50.333%;flex-basis:50.333%;font-weight:700;font-size:28px;line-height:55px}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */